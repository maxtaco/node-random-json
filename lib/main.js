// Generated by IcedCoffeeScript 1.3.3f
(function() {
  var Generator, crypto, g, iced, o, __iced_deferrals, __iced_k, __iced_k_noop,
    _this = this;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  crypto = require('crypto');

  exports.Generator = Generator = (function() {

    function Generator() {}

    Generator.prototype.random_byte = function(cb) {
      var buf, ex, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/main.iced",
          funcname: "Generator.random_byte"
        });
        crypto.randomBytes(1, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              ex = arguments[0];
              return buf = arguments[1];
            };
          })(),
          lineno: 7
        }));
        __iced_deferrals._fulfill();
      })(function() {
        return cb(buf[0]);
      });
    };

    Generator.prototype.random_int = function(cb) {
      var buf, ex, i, r, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/main.iced",
          funcname: "Generator.random_int"
        });
        crypto.randomBytes(4, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              ex = arguments[0];
              return buf = arguments[1];
            };
          })(),
          lineno: 11
        }));
        __iced_deferrals._fulfill();
      })(function() {
        var _i;
        r = 0;
        for (i = _i = 0; _i < 4; i = ++_i) {
          r *= 256;
          r += buf[i];
        }
        return cb(r);
      });
    };

    Generator.prototype.random_string = function(n, cb) {
      var buf, ex, n, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        if (!n) {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "src/main.iced",
              funcname: "Generator.random_string"
            });
            _this.random_int(__iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return n = arguments[0];
                };
              })(),
              lineno: 20
            }));
            __iced_deferrals._fulfill();
          })(function() {
            return __iced_k(n = n % 200);
          });
        } else {
          return __iced_k();
        }
      })(function() {
        (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "src/main.iced",
            funcname: "Generator.random_string"
          });
          crypto.randomBytes(n, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                ex = arguments[0];
                return buf = arguments[1];
              };
            })(),
            lineno: 22
          }));
          __iced_deferrals._fulfill();
        })(function() {
          return cb(buf.toString('base64'));
        });
      });
    };

    Generator.prototype.random_array = function(n, d, cb) {
      var i, n, r, x, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        if (!n) {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "src/main.iced",
              funcname: "Generator.random_array"
            });
            _this.random_int(__iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return n = arguments[0];
                };
              })(),
              lineno: 27
            }));
            __iced_deferrals._fulfill();
          })(function() {
            return __iced_k(n = n % 10);
          });
        } else {
          return __iced_k();
        }
      })(function() {
        r = [];
        (function(__iced_k) {
          var _i, _results, _while;
          i = 0;
          _results = [];
          _while = function(__iced_k) {
            var _break, _continue, _next;
            _break = function() {
              return __iced_k(_results);
            };
            _continue = function() {
              ++i;
              return _while(__iced_k);
            };
            _next = function(__iced_next_arg) {
              _results.push(__iced_next_arg);
              return _continue();
            };
            if (!(i < n)) {
              return _break();
            } else {
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "src/main.iced",
                  funcname: "Generator.random_array"
                });
                _this.generate(d + 1, __iced_deferrals.defer({
                  assign_fn: (function() {
                    return function() {
                      return x = arguments[0];
                    };
                  })(),
                  lineno: 31
                }));
                __iced_deferrals._fulfill();
              })(function() {
                return _next(r[i] = x);
              });
            }
          };
          _while(__iced_k);
        })(function() {
          return cb(r);
        });
      });
    };

    Generator.prototype.random_obj = function(n, d, cb) {
      var i, k, n, r, v, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        if (!n) {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "src/main.iced",
              funcname: "Generator.random_obj"
            });
            _this.random_int(__iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return n = arguments[0];
                };
              })(),
              lineno: 37
            }));
            __iced_deferrals._fulfill();
          })(function() {
            return __iced_k(n %= 8);
          });
        } else {
          return __iced_k();
        }
      })(function() {
        r = {};
        (function(__iced_k) {
          var _i, _results, _while;
          i = 0;
          _results = [];
          _while = function(__iced_k) {
            var _break, _continue, _next;
            _break = function() {
              return __iced_k(_results);
            };
            _continue = function() {
              ++i;
              return _while(__iced_k);
            };
            _next = function(__iced_next_arg) {
              _results.push(__iced_next_arg);
              return _continue();
            };
            if (!(i <= n)) {
              return _break();
            } else {
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "src/main.iced",
                  funcname: "Generator.random_obj"
                });
                _this.random_string(20, __iced_deferrals.defer({
                  assign_fn: (function() {
                    return function() {
                      return k = arguments[0];
                    };
                  })(),
                  lineno: 41
                }));
                __iced_deferrals._fulfill();
              })(function() {
                (function(__iced_k) {
                  __iced_deferrals = new iced.Deferrals(__iced_k, {
                    parent: ___iced_passed_deferral,
                    filename: "src/main.iced",
                    funcname: "Generator.random_obj"
                  });
                  _this.generate(d + 1, __iced_deferrals.defer({
                    assign_fn: (function() {
                      return function() {
                        return v = arguments[0];
                      };
                    })(),
                    lineno: 42
                  }));
                  __iced_deferrals._fulfill();
                })(function() {
                  return _next(r[k] = v);
                });
              });
            }
          };
          _while(__iced_k);
        })(function() {
          return cb(r);
        });
      });
    };

    Generator.prototype.generate = function(d, cb) {
      var b, r, ret, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/main.iced",
          funcname: "Generator.generate"
        });
        _this.random_byte(__iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              return b = arguments[0];
            };
          })(),
          lineno: 47
        }));
        __iced_deferrals._fulfill();
      })(function() {
        b %= 8;
        ret = null;
        if (d > 4 && b > 5) b %= 5;
        (function(__iced_k) {
          switch (b) {
            case 0:
              return __iced_k(r = false);
            case 1:
              return __iced_k(r = true);
            case 2:
              return __iced_k(r = null);
            case 3:
            case 4:
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "src/main.iced",
                  funcname: "Generator.generate"
                });
                _this.random_int(__iced_deferrals.defer({
                  assign_fn: (function() {
                    return function() {
                      return r = arguments[0];
                    };
                  })(),
                  lineno: 59
                }));
                __iced_deferrals._fulfill();
              })(__iced_k);
              break;
            case 5:
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "src/main.iced",
                  funcname: "Generator.generate"
                });
                _this.random_string(null, __iced_deferrals.defer({
                  assign_fn: (function() {
                    return function() {
                      return r = arguments[0];
                    };
                  })(),
                  lineno: 61
                }));
                __iced_deferrals._fulfill();
              })(__iced_k);
              break;
            case 6:
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "src/main.iced",
                  funcname: "Generator.generate"
                });
                _this.random_array(null, d, __iced_deferrals.defer({
                  assign_fn: (function() {
                    return function() {
                      return r = arguments[0];
                    };
                  })(),
                  lineno: 63
                }));
                __iced_deferrals._fulfill();
              })(__iced_k);
              break;
            case 7:
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "src/main.iced",
                  funcname: "Generator.generate"
                });
                _this.random_obj(null, d, __iced_deferrals.defer({
                  assign_fn: (function() {
                    return function() {
                      return r = arguments[0];
                    };
                  })(),
                  lineno: 65
                }));
                __iced_deferrals._fulfill();
              })(__iced_k);
          }
        })(function() {
          return cb(r);
        });
      });
    };

    return Generator;

  })();

  g = new Generator();

  (function(__iced_k) {
    __iced_deferrals = new iced.Deferrals(__iced_k, {
      filename: "src/main.iced"
    });
    g.random_array(null, 0, __iced_deferrals.defer({
      assign_fn: (function() {
        return function() {
          return o = arguments[0];
        };
      })(),
      lineno: 69
    }));
    __iced_deferrals._fulfill();
  })(function() {
    return console.log(o);
  });

}).call(this);
